{"version":3,"sources":["asscrollable.js","animsition.js","slidepanel.js","switchery.js","panel.js","toastr.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"components.js","sourcesContent":["$.components.register(\"scrollable\", {\n  mode: \"init\",\n  defaults: {\n    namespace: \"scrollable\",\n    contentSelector: \"> [data-role='content']\",\n    containerSelector: \"> [data-role='container']\"\n  },\n  init: function(context) {\n    if (!$.fn.asScrollable) return;\n    var defaults = $.components.getDefaults(\"scrollable\");\n\n    $('[data-plugin=\"scrollable\"]', context).each(function() {\n      var options = $.extend({}, defaults, $(this).data());\n\n      $(this).asScrollable(options);\n    });\n  }\n});\n","$.components.register(\"animsition\", {\n  mode: \"manual\",\n  defaults: {\n    inClass: 'fade-in',\n    outClass: 'fade-out',\n    inDuration: 800,\n    outDuration: 500,\n    linkElement: '.animsition-link',\n    loading: true,\n    loadingParentElement: \"body\",\n    loadingClass: \"loader\",\n    loadingType: \"default\",\n    timeout: false,\n    timeoutCountdown: 5000,\n    onLoadEvent: true,\n    browser: ['animation-duration', '-webkit-animation-duration'],\n    overlay: false,\n    // random: true,\n    overlayClass: 'animsition-overlay-slide',\n    overlayParentElement: \"body\",\n\n    inDefaults: [\n      'fade-in',\n      'fade-in-up-sm', 'fade-in-up', 'fade-in-up-lg',\n      'fade-in-down-sm', 'fade-in-down', 'fade-in-down-lg',\n      'fade-in-left-sm', 'fade-in-left', 'fade-in-left-lg',\n      'fade-in-right-sm', 'fade-in-right', 'fade-in-right-lg',\n      // 'overlay-slide-in-top', 'overlay-slide-in-bottom', 'overlay-slide-in-left', 'overlay-slide-in-right',\n      'zoom-in-sm', 'zoom-in', 'zoom-in-lg'\n    ],\n    outDefaults: [\n      'fade-out',\n      'fade-out-up-sm', 'fade-out-up', 'fade-out-up-lg',\n      'fade-out-down-sm', 'fade-out-down', 'fade-out-down-lg',\n      'fade-out-left-sm', 'fade-out-left', 'fade-out-left-lg',\n      'fade-out-right-sm', 'fade-out-right', 'fade-out-right-lg',\n      // 'overlay-slide-out-top', 'overlay-slide-out-bottom', 'overlay-slide-out-left', 'overlay-slide-out-right'\n      'zoom-out-sm', 'zoom-out', 'zoom-out-lg'\n    ]\n  },\n\n  init: function(context, callback) {\n    var options = $.components.getDefaults(\"animsition\");\n\n    if (options.random) {\n      var li = options.inDefaults.length,\n        lo = options.outDefaults.length;\n\n      var ni = parseInt(li * Math.random(), 0),\n        no = parseInt(lo * Math.random(), 0);\n\n      options.inClass = options.inDefaults[ni];\n      options.outClass = options.outDefaults[no];\n    }\n\n    var $this = $(\".animsition\", context);\n\n    $this.animsition(options);\n\n    $(\".\" + options.loadingClass).addClass('loader-' + options.loadingType);\n\n    if ($this.animsition('supportCheck', options)) {\n      if ($.isFunction(callback)) {\n        $this.one('animsition.end', function() {\n          callback.call();\n        });\n      }\n\n      return true;\n    } else {\n      if ($.isFunction(callback)) {\n        callback.call();\n      }\n      return false;\n    }\n  }\n});\n","$.components.register(\"slidePanel\", {\n  mode: \"manual\",\n  defaults: {\n    closeSelector: '.slidePanel-close',\n    mouseDragHandler: '.slidePanel-handler',\n    loading: {\n      template: function(options) {\n        return '<div class=\"' + options.classes.loading + '\">' +\n          '<div class=\"loader loader-default\"></div>' +\n          '</div>';\n      },\n      showCallback: function(options) {\n        this.$el.addClass(options.classes.loading + '-show');\n      },\n      hideCallback: function(options) {\n        this.$el.removeClass(options.classes.loading + '-show');\n      }\n    }\n  }\n});\n","$.components.register(\"switchery\", {\n  mode: \"init\",\n  defaults: {\n    color: $.colors(\"primary\", 600)\n  },\n  init: function(context) {\n    if (typeof Switchery === \"undefined\") return;\n\n    var defaults = $.components.getDefaults(\"switchery\");\n\n    $('[data-plugin=\"switchery\"]', context).each(function() {\n      var options = $.extend({}, defaults, $(this).data());\n\n      new Switchery(this, options);\n    });\n  }\n});\n","$.components.register(\"panel\", {\n  api: function() {\n    $(document).on('click.site.panel', '[data-toggle=\"panel-fullscreen\"]', function(e) {\n      e.preventDefault();\n      var $this = $(this),\n        $panel = $this.closest('.panel');\n\n      var api = $panel.data('panel-api');\n      api.toggleFullscreen();\n    });\n\n    $(document).on('click.site.panel', '[data-toggle=\"panel-collapse\"]', function(e) {\n      e.preventDefault();\n      var $this = $(this),\n        $panel = $this.closest('.panel');\n\n      var api = $panel.data('panel-api');\n      api.toggleContent();\n    });\n\n    $(document).on('click.site.panel', '[data-toggle=\"panel-close\"]', function(e) {\n      e.preventDefault();\n      var $this = $(this),\n        $panel = $this.closest('.panel');\n\n      var api = $panel.data('panel-api');\n      api.close();\n    });\n\n    $(document).on('click.site.panel', '[data-toggle=\"panel-refresh\"]', function(e) {\n      e.preventDefault();\n      var $this = $(this);\n      var $panel = $this.closest('.panel');\n\n      var api = $panel.data('panel-api');\n      var callback = $this.data('loadCallback');\n\n      if ($.isFunction(window[callback])) {\n        api.load(e.target, window[callback]);\n      } else {\n        api.load(e.target);\n      }\n    });\n  },\n\n  init: function(context) {\n    $('.panel', context).each(function() {\n      var $this = $(this);\n\n      var isFullscreen = false;\n      var isClose = false;\n      var isCollapse = false;\n      var isLoading = false;\n\n      var $fullscreen = $this.find('[data-toggle=\"panel-fullscreen\"]');\n      var $collapse = $this.find('[data-toggle=\"panel-collapse\"]');\n      var $loading;\n      var self = this;\n\n      if ($this.hasClass('is-collapse')) {\n        isCollapse = true;\n      }\n\n      var api = {\n        load: function(elem, callback) {\n          var type = $this.data('loader-type');\n          if (!type) {\n            type = 'default';\n          }\n\n          $loading = $('<div class=\"panel-loading\">' +\n            '<div class=\"loader loader-' + type + '\"></div>' +\n            '</div>');\n\n          $loading.appendTo($this);\n\n          $this.addClass('is-loading');\n          $this.trigger('loading.uikit.panel');\n          isLoading = true;\n\n          if ($.isFunction(callback)) {\n            callback.call(self, elem, this.done);\n          }\n        },\n        done: function() {\n          if (isLoading === true) {\n            $loading.remove();\n            $this.removeClass('is-loading');\n            $this.trigger('loading.done.uikit.panel');\n          }\n        },\n        toggleContent: function() {\n          if (isCollapse) {\n            this.showContent();\n          } else {\n            this.hideContent();\n          }\n        },\n\n        showContent: function() {\n          if (isCollapse !== false) {\n            $this.removeClass('is-collapse');\n\n            if ($collapse.hasClass('wb-plus')) {\n              $collapse.removeClass('wb-plus').addClass('wb-minus');\n            }\n\n            $this.trigger('shown.uikit.panel');\n\n            isCollapse = false;\n          }\n        },\n\n        hideContent: function() {\n          if (isCollapse !== true) {\n            $this.addClass('is-collapse');\n\n            if ($collapse.hasClass('wb-minus')) {\n              $collapse.removeClass('wb-minus').addClass('wb-plus');\n            }\n\n            $this.trigger('hidden.uikit.panel');\n            isCollapse = true;\n          }\n        },\n\n        toggleFullscreen: function() {\n          if (isFullscreen) {\n            this.leaveFullscreen();\n          } else {\n            this.enterFullscreen();\n          }\n        },\n        enterFullscreen: function() {\n          if (isFullscreen !== true) {\n            $this.addClass('is-fullscreen');\n\n            if ($fullscreen.hasClass('wb-expand')) {\n              $fullscreen.removeClass('wb-expand').addClass('wb-contract');\n            }\n\n            $this.trigger('enter.fullscreen.uikit.panel');\n            isFullscreen = true;\n          }\n        },\n        leaveFullscreen: function() {\n          if (isFullscreen !== false) {\n            $this.removeClass('is-fullscreen');\n\n            if ($fullscreen.hasClass('wb-contract')) {\n              $fullscreen.removeClass('wb-contract').addClass('wb-expand');\n            }\n\n            $this.trigger('leave.fullscreen.uikit.panel');\n            isFullscreen = false;\n          }\n        },\n        toggle: function() {\n          if (isClose) {\n            this.open();\n          } else {\n            this.close();\n          }\n        },\n        open: function() {\n          if (isClose !== false) {\n            $this.removeClass('is-close');\n            $this.trigger('open.uikit.panel');\n\n            isClose = false;\n          }\n        },\n        close: function() {\n          if (isClose !== true) {\n\n            $this.addClass('is-close');\n            $this.trigger('close.uikit.panel');\n\n            isClose = true;\n          }\n        }\n      };\n\n      $this.data('panel-api', api);\n    });\n  }\n});\n\nvar panelRefreshCallback = function (elem, panelCallback) {\n    var url = elem.getAttribute('data-url');\n    if ( ! url) {\n        panelCallback();\n        return false;\n    }\n    $.ajax({\n        url: url,\n        type: 'GET',\n        success: function(result) {\n            if (result.response) {\n                $(elem).parents('.panel').children('.panel-body').html(result.response);\n            }\n            panelCallback();\n        },\n        error: function(result) {\n            alert('Smth went wrong...');\n            panelCallback();\n        }\n    });\n}","$.components.register(\"toastr\", {\n  mode: \"api\",\n  api: function() {\n    if (typeof toastr === \"undefined\") return;\n    var defaults = $.components.getDefaults(\"toastr\");\n\n    $(document).on('click.site.toastr', '[data-plugin=\"toastr\"]', function(e) {\n      e.preventDefault();\n\n      var $this = $(this);\n      var options = $.extend(true, {}, defaults, $this.data());\n      var message = options.message || '';\n      var type = options.type || \"info\";\n      var title = options.title || undefined;\n\n      switch (type) {\n        case \"success\":\n          toastr.success(message, title, options);\n          break;\n        case \"warning\":\n          toastr.warning(message, title, options);\n          break;\n        case \"error\":\n          toastr.error(message, title, options);\n          break;\n        case \"info\":\n          toastr.info(message, title, options);\n          break;\n        default:\n          toastr.info(message, title, options);\n      }\n    });\n  }\n});\n\ntoastr.options = {\n  \"closeButton\": false,\n  \"debug\": false,\n  \"newestOnTop\": true,\n  \"progressBar\": false,\n  \"positionClass\": \"toast-top-center\",\n  \"preventDuplicates\": true,\n  \"onclick\": null,\n  \"showDuration\": \"100\",\n  \"hideDuration\": \"100\",\n  \"timeOut\": \"5000\",\n  \"extendedTimeOut\": \"1000\",\n  \"showEasing\": \"swing\",\n  \"hideEasing\": \"linear\",\n  \"showMethod\": \"slideDown\",\n  \"hideMethod\": \"fadeOut\"\n}"],"sourceRoot":"/source/"}