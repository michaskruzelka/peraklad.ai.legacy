{"version":3,"sources":["menu.js","menubar.js","gridmenu.js","sidebar.js"],"names":[],"mappingslpzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sections.js","sourcesContent":["(function(window, document, $) {\n  'use strict';\n\n  $.site.menu = {\n    speed: 250,\n    accordion: true, // A setting that changes the collapsible behavior to expandable instead of the default accordion style\n\n    init: function() {\n      this.$instance = $('.site-menu');\n\n      if (this.$instance.length === 0) {\n        return;\n      }\n\n      this.bind();\n    },\n\n    bind: function() {\n      var self = this;\n\n      this.$instance.on('mouseenter.site.menu', '.site-menu-item', function() {\n        var $item = $(this);\n        if ($.site.menubar.folded === true && $item.is('.has-sub') && $item.parent('.site-menu').length > 0) {\n          var $sub = $item.children('.site-menu-sub');\n          self.position($item, $sub);\n        }\n\n        $item.addClass('hover');\n      }).on('mouseleave.site.menu', '.site-menu-item', function() {\n        var $item = $(this);\n        if ($.site.menubar.folded === true && $item.is('.has-sub') && $item.parent('.site-menu').length > 0) {\n          $item.children('.site-menu-sub').css(\"max-height\", \"\");\n        }\n\n        $item.removeClass('hover');\n      }).on('deactive.site.menu', '.site-menu-item.active', function(e) {\n        var $item = $(this);\n\n        $item.removeClass('active');\n\n        e.stopPropagation();\n      }).on('active.site.menu', '.site-menu-item', function(e) {\n        var $item = $(this);\n\n        $item.addClass('active');\n\n        e.stopPropagation();\n      }).on('open.site.menu', '.site-menu-item', function(e) {\n        var $item = $(this);\n\n        self.expand($item, function() {\n          $item.addClass('open');\n        });\n\n        if (self.accordion) {\n          $item.siblings('.open').trigger('close.site.menu');\n        }\n\n        e.stopPropagation();\n      }).on('close.site.menu', '.site-menu-item.open', function(e) {\n        var $item = $(this);\n\n        self.collapse($item, function() {\n          $item.removeClass('open');\n        });\n\n        e.stopPropagation();\n      }).on('click.site.menu ', '.site-menu-item', function(e) {\n        if ($(this).is('.has-sub') && $(e.target).closest('.site-menu-item').is(this)) {\n          if ($(this).is('.open')) {\n            $(this).trigger('close.site.menu');\n          } else {\n            $(this).trigger('open.site.menu');\n          }\n        } else {\n          if (!$(this).is('.active')) {\n            $(this).siblings('.active').trigger('deactive.site.menu');\n            $(this).trigger('active.site.menu');\n          }\n        }\n\n        e.stopPropagation();\n      }).on('tap.site.menu', '> .site-menu-item > a', function() {\n        var link = $(this).attr('href');\n\n        if (link) {\n          window.location = link;\n        }\n      }).on('touchend.site.menu', '> .site-menu-item > a', function(e) {\n        var $item = $(this).parent('.site-menu-item');\n\n        if ($.site.menubar.folded === true) {\n          if ($item.is('.has-sub') && $item.parent('.site-menu').length > 0) {\n            $item.siblings('.hover').removeClass('hover');\n\n            if ($item.is('.hover')) {\n              $item.removeClass('hover');\n            } else {\n              $item.addClass('hover');\n            }\n          }\n        }\n      }).on('scroll.site.menu', '.site-menu-sub', function(e) {\n        e.stopPropagation();\n      });\n    },\n\n    collapse: function($item, callback) {\n      var self = this;\n      var $sub = $item.children('.site-menu-sub');\n\n      $sub.show().slideUp(this.speed, function() {\n        $(this).css('display', '');\n\n        $(this).find('> .site-menu-item').removeClass('is-shown');\n\n        if (callback) {\n          callback();\n        }\n\n        self.$instance.trigger('collapsed.site.menu');\n      });\n    },\n\n    expand: function($item, callback) {\n      var self = this;\n      var $sub = $item.children('.site-menu-sub');\n      var $children = $sub.children('.site-menu-item').addClass('is-hidden');\n\n      $sub.hide().slideDown(this.speed, function() {\n        $(this).css('display', '');\n\n        if (callback) {\n          callback();\n        }\n\n        self.$instance.trigger('expanded.site.menu');\n      });\n\n      setTimeout(function() {\n        $children.addClass('is-shown');\n        $children.removeClass('is-hidden');\n      }, 0);\n    },\n\n    refresh: function() {\n      this.$instance.find('.open').filter(':not(.active)').removeClass('open');\n    },\n\n    position: function($item, $dropdown) {\n      var offsetTop = $item.position().top,\n        dropdownHeight = $dropdown.outerHeight(),\n        menubarHeight = $.site.menubar.$instance.outerHeight(),\n        itemHeight = $item.find(\"> a\").outerHeight();\n\n      $dropdown.removeClass('site-menu-sub-up').css('max-height', \"\");\n\n      //if (offsetTop + dropdownHeight > menubarHeight) {\n      if (offsetTop > menubarHeight / 2) {\n        $dropdown.addClass('site-menu-sub-up');\n\n        if ($.site.menubar.foldAlt) {\n          offsetTop = offsetTop - itemHeight;\n        }\n        //if(dropdownHeight > offsetTop + itemHeight) {\n        $dropdown.css('max-height', offsetTop + itemHeight);\n        //}\n      } else {\n        if ($.site.menubar.foldAlt) {\n          offsetTop = offsetTop + itemHeight;\n        }\n        $dropdown.removeClass('site-menu-sub-up');\n        $dropdown.css('max-height', menubarHeight - offsetTop);\n      }\n      //}\n    }\n  };\n})(window, document, jQuery);\n","(function(window, document, $) {\n  'use strict';\n\n  var $body = $('body'),\n    $html = $('html');\n\n  $.site.menubar = {\n    opened: null,\n    folded: null,\n    top: false,\n    foldAlt: false,\n    $instance: null,\n    auto: true,\n\n    init: function() {\n      $html.removeClass('css-menubar').addClass('js-menubar');\n\n      this.$instance = $(\".site-menubar\");\n\n      if (this.$instance.length === 0) {\n        return;\n      }\n\n      var self = this;\n\n      if ($body.is('.site-menubar-top')) {\n        this.top = true;\n      }\n\n      if ($body.is('.site-menubar-fold-alt')) {\n        this.foldAlt = true;\n      }\n\n      if ($body.data('autoMenubar') === false || $body.is('.site-menubar-keep')) {\n        if ($body.hasClass('site-menubar-fold')) {\n          this.auto = 'fold';\n        } else if ($body.hasClass('site-menubar-unfold')) {\n          this.auto = 'unfold';\n        }\n      }\n\n      this.$instance.on('changed.site.menubar', function() {\n        self.update();\n      });\n\n      this.change();\n    },\n\n    change: function() {\n      var breakpoint = Breakpoints.current();\n      if (this.auto !== true) {\n        switch (this.auto) {\n          case 'fold':\n            this.reset();\n            if (breakpoint.name == 'xs') {\n              this.hide();\n            } else {\n              this.fold();\n            }\n            return;\n          case 'unfold':\n            this.reset();\n            if (breakpoint.name == 'xs') {\n              this.hide();\n            } else {\n              this.unfold();\n            }\n            return;\n        }\n      }\n\n      this.reset();\n\n      if (breakpoint) {\n        switch (breakpoint.name) {\n          case 'lg':\n            this.unfold();\n            break;\n          case 'md':\n          case 'sm':\n            this.fold();\n            break;\n          case 'xs':\n            this.hide();\n            break;\n        }\n      }\n    },\n\n    animate: function(doing, callback) {\n      var self = this;\n      $body.addClass('site-menubar-changing');\n\n      doing.call(self);\n      this.$instance.trigger('changing.site.menubar');\n\n      setTimeout(function() {\n        callback.call(self);\n        $body.removeClass('site-menubar-changing');\n\n        self.$instance.trigger('changed.site.menubar');\n      }, 500);\n    },\n\n    reset: function() {\n      this.opened = null;\n      this.folded = null;\n      $body.removeClass('site-menubar-hide site-menubar-open site-menubar-fold site-menubar-unfold');\n      $html.removeClass('disable-scrolling');\n    },\n\n    open: function() {\n      if (this.opened !== true) {\n        this.animate(function() {\n          $body.removeClass('site-menubar-hide').addClass('site-menubar-open site-menubar-unfold');\n          this.opened = true;\n\n          $html.addClass('disable-scrolling');\n\n        }, function() {\n          this.scrollable.enable();\n        });\n      }\n    },\n\n    hide: function() {\n      this.hoverscroll.disable();\n\n      if (this.opened !== false) {\n        this.animate(function() {\n\n          $html.removeClass('disable-scrolling');\n          $body.removeClass('site-menubar-open').addClass('site-menubar-hide site-menubar-unfold');\n          this.opened = false;\n\n        }, function() {\n          this.scrollable.enable();\n        });\n      }\n    },\n\n    unfold: function() {\n      this.hoverscroll.disable();\n\n      if (this.folded !== false) {\n        this.animate(function() {\n          $body.removeClass('site-menubar-fold').addClass('site-menubar-unfold');\n          this.folded = false;\n\n        }, function() {\n          this.scrollable.enable();\n\n          if (this.folded !== null) {\n            $.site.resize();\n          }\n        });\n      }\n    },\n\n    fold: function() {\n      this.scrollable.disable();\n\n      if (this.folded !== true) {\n        this.animate(function() {\n\n          $body.removeClass('site-menubar-unfold').addClass('site-menubar-fold');\n          this.folded = true;\n\n        }, function() {\n          this.hoverscroll.enable();\n\n          if (this.folded !== null) {\n            $.site.resize();\n          }\n        });\n      }\n    },\n\n    toggle: function() {\n      var breakpoint = Breakpoints.current();\n      var folded = this.folded;\n      var opened = this.opened;\n\n      switch (breakpoint.name) {\n        case 'lg':\n          if (folded === null || folded === false) {\n            this.fold();\n          } else {\n            this.unfold();\n          }\n          break;\n        case 'md':\n        case 'sm':\n          if (folded === null || folded === true) {\n            this.unfold();\n          } else {\n            this.fold();\n          }\n          break;\n        case 'xs':\n          if (opened === null || opened === false) {\n            this.open();\n          } else {\n            this.hide();\n          }\n          break;\n      }\n    },\n\n    update: function() {\n      this.scrollable.update();\n      this.hoverscroll.update();\n    },\n\n    scrollable: {\n      api: null,\n      native: false,\n      init: function() {\n        // if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n        //   this.native = true;\n        //   $body.addClass('site-menubar-native');\n        //   return;\n        // }\n\n        if ($body.is('.site-menubar-native')) {\n          this.native = true;\n          return;\n        }\n\n        this.api = $.site.menubar.$instance.children('.site-menubar-body').asScrollable({\n          namespace: 'scrollable',\n          skin: 'scrollable-inverse',\n          direction: 'vertical',\n          contentSelector: '>',\n          containerSelector: '>'\n        }).data('asScrollable');\n      },\n\n      update: function() {\n        if (this.api) {\n          this.api.update();\n        }\n      },\n\n      enable: function() {\n        if (this.native) {\n          return;\n        }\n        if (!this.api) {\n          this.init();\n        }\n        if (this.api) {\n          this.api.enable();\n        }\n      },\n\n      disable: function() {\n        if (this.api) {\n          this.api.disable();\n        }\n      }\n    },\n\n    hoverscroll: {\n      api: null,\n\n      init: function() {\n        this.api = $.site.menubar.$instance.children('.site-menubar-body').asHoverScroll({\n          namespace: 'hoverscorll',\n          direction: 'vertical',\n          list: '.site-menu',\n          item: '> li',\n          exception: '.site-menu-sub',\n          fixed: false,\n          boundary: 100,\n          onEnter: function() {\n            //$(this).siblings().removeClass('hover');\n            //$(this).addClass('hover');\n          },\n          onLeave: function() {\n            //$(this).removeClass('hover');\n          }\n        }).data('asHoverScroll');\n      },\n\n      update: function() {\n        if (this.api) {\n          this.api.update();\n        }\n      },\n\n      enable: function() {\n        if (!this.api) {\n          this.init();\n        }\n        if (this.api) {\n          this.api.enable();\n        }\n      },\n\n      disable: function() {\n        if (this.api) {\n          this.api.disable();\n        }\n      }\n    }\n  };\n})(window, document, jQuery);\n","(function(window, document, $) {\n  'use strict';\n\n  var $body = $('body'),\n    $html = $('html');\n\n  $.site.gridmenu = {\n    opened: false,\n\n    init: function() {\n      this.$instance = $('.site-gridmenu');\n\n      if (this.$instance.length === 0) {\n        return;\n      }\n\n      this.bind();\n    },\n\n    bind: function() {\n      var self = this;\n\n      $(document).on('click', '[data-toggle=\"gridmenu\"]', function() {\n        var $this = $(this);\n\n        if (self.opened) {\n          self.close();\n\n          $this.removeClass('active')\n            .attr('aria-expanded', false);\n\n        } else {\n          self.open();\n\n          $this.addClass('active')\n            .attr('aria-expanded', true);\n        }\n      });\n    },\n\n    open: function() {\n      var self = this;\n\n      if (this.opened !== true) {\n        this.animate(function() {\n          self.opened = true;\n\n\n          self.$instance.addClass('active');\n\n          $('[data-toggle=\"gridmenu\"]').addClass('active')\n            .attr('aria-expanded', true);\n\n          $body.addClass('site-gridmenu-active');\n          $html.addClass('disable-scrolling');\n        }, function() {\n          this.scrollable.enable();\n        });\n      }\n    },\n\n    close: function() {\n      var self = this;\n\n      if (this.opened === true) {\n        this.animate(function() {\n          self.opened = false;\n\n          self.$instance.removeClass('active');\n\n          $('[data-toggle=\"gridmenu\"]').addClass('active')\n            .attr('aria-expanded', true);\n\n          $body.removeClass('site-gridmenu-active');\n          $html.removeClass('disable-scrolling');\n        }, function() {\n          this.scrollable.disable();\n        });\n      }\n    },\n\n    toggle: function() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n\n    animate: function(doing, callback) {\n      var self = this;\n\n      doing.call(self);\n      this.$instance.trigger('changing.site.gridmenu');\n\n      setTimeout(function() {\n        callback.call(self);\n\n        self.$instance.trigger('changed.site.gridmenu');\n      }, 500);\n    },\n\n    scrollable: {\n      api: null,\n      init: function() {\n        this.api = $.site.gridmenu.$instance.asScrollable({\n          namespace: 'scrollable',\n          skin: 'scrollable-inverse',\n          direction: 'vertical',\n          contentSelector: '>',\n          containerSelector: '>'\n        }).data('asScrollable');\n      },\n\n      update: function() {\n        if (this.api) {\n          this.api.update();\n        }\n      },\n\n      enable: function() {\n        if (!this.api) {\n          this.init();\n        }\n        if (this.api) {\n          this.api.enable();\n        }\n      },\n\n      disable: function() {\n        if (this.api) {\n          this.api.disable();\n        }\n      }\n    },\n  };\n})(window, document, jQuery);\n","(function(window, document, $) {\n  'use strict';\n\n  $.site.sidebar = {\n    init: function() {\n      if (typeof $.slidePanel === 'undefined') return;\n\n      $(document).on('click', '[data-toggle=\"site-sidebar\"]', function() {\n        var $this = $(this);\n\n        var direction = 'right';\n        if ($('body').hasClass('site-menubar-flipped')) {\n          direction = 'left';\n        }\n\n        var defaults = $.components.getDefaults(\"slidePanel\");\n        var options = $.extend({}, defaults, {\n          direction: direction,\n          skin: 'site-sidebar',\n          dragTolerance: 80,\n          template: function(options) {\n            return '<div class=\"' + options.classes.base + ' ' + options.classes.base + '-' + options.direction + '\">' +\n              '<div class=\"' + options.classes.content + ' site-sidebar-content\"></div>' +\n              '<div class=\"slidePanel-handler\"></div>' +\n              '</div>';\n          },\n          afterLoad: function() {\n            var self = this;\n            this.$panel.find('.tab-pane').asScrollable({\n              namespace: 'scrollable',\n              contentSelector: \"> div\",\n              containerSelector: \"> div\"\n            });\n\n            $.components.init('switchery', self.$panel);\n\n            this.$panel.on('shown.bs.tab', function() {\n              self.$panel.find(\".tab-pane.active\").asScrollable('update');\n            });\n          },\n          beforeShow: function() {\n            if (!$this.hasClass('active')) {\n              $this.addClass('active');\n            }\n          },\n          afterHide: function() {\n            if ($this.hasClass('active')) {\n              $this.removeClass('active');\n            }\n          }\n        });\n\n        if ($this.hasClass('active')) {\n          $.slidePanel.hide();\n        } else {\n          var url = $this.data('url');\n          if (!url) {\n            url = $this.attr('href');\n            url = url && url.replace(/.*(?=#[^\\s]*$)/, '');\n          }\n\n          $.slidePanel.show({\n            url: url\n          }, options);\n        }\n      });\n\n      $(document).on('click', '[data-toggle=\"show-chat\"]', function() {\n        $('#conversation').addClass('active');\n      });\n\n\n      $(document).on('click', '[data-toggle=\"close-chat\"]', function() {\n        $('#conversation').removeClass('active');\n      });\n    }\n  };\n\n})(window, document, jQuery);\n"],"sourceRoot":"/source/"}