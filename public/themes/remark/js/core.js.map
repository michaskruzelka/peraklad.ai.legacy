{"version":3,"sources":["core.js"],"names":[],"mappingsfile":"core.js","sourcesContent":["(function(window, document, $) {\n  'use strict';\n\n  var $doc = $(document);\n\n  // Site\n  // ====\n  $.site = $.site || {};\n\n  $.extend($.site, {\n    _queue: {\n      prepare: [],\n      run: [],\n      complete: []\n    },\n\n    run: function() {\n      var self = this;\n\n      this.dequeue('prepare', function() {\n        self.trigger('before.run', self);\n      });\n\n      this.dequeue('run', function() {\n        self.dequeue('complete', function() {\n          self.trigger('after.run', self);\n        });\n      });\n    },\n\n    dequeue: function(name, done) {\n      var self = this,\n        queue = this.getQueue(name),\n        fn = queue.shift(),\n        next = function() {\n          self.dequeue(name, done);\n        };\n\n      if (fn) {\n        fn.call(this, next);\n      } else if ($.isFunction(done)) {\n        done.call(this);\n      }\n    },\n\n    getQueue: function(name) {\n      if (!$.isArray(this._queue[name])) {\n        this._queue[name] = [];\n      }\n\n      return this._queue[name];\n    },\n\n    extend: function(obj) {\n      $.each(this._queue, function(name, queue) {\n        if ($.isFunction(obj[name])) {\n          queue.push(obj[name]);\n\n          delete obj[name];\n        }\n      });\n\n      $.extend(this, obj);\n\n      return this;\n    },\n\n    trigger: function(name, data, $el) {\n      if (typeof name === 'undefined') return;\n      if (typeof $el === 'undefined') $el = $doc;\n\n      $el.trigger(name + '.site', data);\n    },\n\n    throttle: function(func, wait) {\n      var _now = Date.now || function() {\n        return new Date().getTime();\n      };\n      var context, args, result;\n      var timeout = null;\n      var previous = 0;\n\n      var later = function() {\n        previous = _now();\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      };\n\n      return function() {\n        var now = _now();\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n          clearTimeout(timeout);\n          timeout = null;\n          previous = now;\n          result = func.apply(context, args);\n          context = args = null;\n        } else if (!timeout) {\n          timeout = setTimeout(later, remaining);\n        }\n        return result;\n      };\n    },\n\n    resize: function() {\n      if (document.createEvent) {\n        var ev = document.createEvent('Event');\n        ev.initEvent('resize', true, true);\n        window.dispatchEvent(ev);\n      } else {\n        element = document.documentElement;\n        var event = document.createEventObject();\n        element.fireEvent(\"onresize\", event);\n      }\n    }\n  });\n\n  // Configs\n  // =======\n  $.configs = $.configs || {};\n\n  $.extend($.configs, {\n    data: {},\n    get: function(name) {\n      var callback = function(data, name) {\n        return data[name];\n      }\n\n      var data = this.data;\n\n      for (var i = 0; i < arguments.length; i++) {\n        name = arguments[i];\n\n        data = callback(data, name);\n      }\n\n      return data;\n    },\n\n    set: function(name, value) {\n      this.data[name] = value;\n    },\n\n    extend: function(name, options) {\n      var value = this.get(name);\n      return $.extend(true, value, options);\n    }\n  });\n\n  // Colors\n  // ======\n  $.colors = function(name, level) {\n    if (name === 'primary') {\n      name = $.configs.get('site', 'primaryColor');\n      if (!name) {\n        name = 'red';\n      }\n    }\n\n    if (typeof $.configs.colors === 'undefined') {\n      return null;\n    }\n\n    if (typeof $.configs.colors[name] !== 'undefined') {\n      if (level && typeof $.configs.colors[name][level] !== 'undefined') {\n        return $.configs.colors[name][level];\n      }\n\n      if (typeof level === 'undefined') {\n        return $.configs.colors[name];\n      }\n    }\n\n    return null;\n  };\n\n  // Components\n  // ==========\n  $.components = $.components || {};\n\n  $.extend($.components, {\n    _components: {},\n\n    register: function(name, obj) {\n      this._components[name] = obj;\n    },\n\n    init: function(name, context, args) {\n      var self = this;\n\n      if (typeof name === 'undefined') {\n        $.each(this._components, function(name) {\n          self.init(name);\n        });\n      } else {\n        context = context || document;\n        args = args || [];\n\n        var obj = this.get(name);\n\n        if (obj) {\n          switch (obj.mode) {\n            case 'default':\n              return this._initDefault(name, context);\n            case 'init':\n              return this._initComponent(name, obj, context, args);\n            case 'api':\n              return this._initApi(name, obj, args);\n            default:\n              this._initApi(name, obj, context, args);\n              this._initComponent(name, obj, context, args);\n              return;\n          }\n        }\n      }\n    },\n\n    /* init alternative, but only or init mode */\n    call: function(name, context) {\n      var args = Array.prototype.slice.call(arguments, 2);\n      var obj = this.get(name);\n\n      context = context || document;\n\n      return this._initComponent(name, obj, context, args);\n    },\n\n    _initDefault: function(name, context) {\n      if (!$.fn[name]) return;\n\n      var defaults = this.getDefaults(name);\n\n      $('[data-plugin=' + name + ']', context).each(function() {\n        var $this = $(this),\n          options = $.extend(true, {}, defaults, $this.data());\n\n        $this[name](options);\n      });\n    },\n\n\n    _initComponent: function(name, obj, context, args) {\n      if ($.isFunction(obj.init)) {\n        obj.init.apply(obj, [context].concat(args));\n      }\n    },\n\n    _initApi: function(name, obj, args) {\n      if (typeof obj.apiCalled === 'undefined' && $.isFunction(obj.api)) {\n        obj.api.apply(obj, args);\n\n        obj.apiCalled = true;\n      }\n    },\n\n\n    getDefaults: function(name) {\n      var component = this.get(name);\n\n      if (component && typeof component.defaults !== \"undefined\") {\n        return component.defaults;\n      } else {\n        return {};\n      }\n    },\n\n    get: function(name, property) {\n      if (typeof this._components[name] !== \"undefined\") {\n        if (typeof property !== \"undefined\") {\n          return this._components[name][property];\n        } else {\n          return this._components[name];\n        }\n      } else {\n        console.warn('component:' + component + ' script is not loaded.');\n\n        return undefined;\n      }\n    }\n  });\n\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  });\n\n})(window, document, jQuery);\n"],"sourceRoot":"/source/"}